<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>assembly on Brett Apitz is Learning Stuff</title>
    <link>https://brettapitz.github.io/tags/assembly/</link>
    <description>Recent content in assembly on Brett Apitz is Learning Stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Mar 2021 12:33:46 -0500</lastBuildDate><atom:link href="https://brettapitz.github.io/tags/assembly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Translating GAS to NASM, part 4</title>
      <link>https://brettapitz.github.io/posts/groundup4/</link>
      <pubDate>Mon, 29 Mar 2021 12:33:46 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/groundup4/</guid>
      <description>This chapter was a project. Not only was there far more code than any previous chapter, but I also put off learning make until I was nearly finished, so I spent a whooooole lot of time re-assembling and re-linking. For anyone similarly ignorant of the wonders of makefiles, you can grab mine here (or learn about them here). Store the makefile in the same directory as your ASM files and enter make in your terminal to handle all your assembling and linking.</description>
    </item>
    
    <item>
      <title>Translating GAS to NASM, part 3</title>
      <link>https://brettapitz.github.io/posts/groundup3/</link>
      <pubDate>Fri, 05 Mar 2021 11:23:29 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/groundup3/</guid>
      <description>Chapter 5 introduces file manipulation, which means more interaction with the operating system. All system calls changed with the move to x86_64, so whenever they come up in the book I&amp;rsquo;ll have a lot of researching and translating to do. For those of us with terrible memories, we&amp;rsquo;ve also got symbol declarations for constants now, which are only slightly different in NASM. Uninitialized data declaration syntax brings us the second appearance of NASM&amp;rsquo;s bwdqtoyz size-type suffixes, for which I made my own mnemonic: &amp;lsquo;Black and White Dairy Queen TOYZ&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Translating GAS to NASM, part 2</title>
      <link>https://brettapitz.github.io/posts/groundup2/</link>
      <pubDate>Sat, 27 Feb 2021 19:38:29 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/groundup2/</guid>
      <description>Chapter 4 covers basic functions, and there&amp;rsquo;s not a lot to go over - function syntax is very similar between GAS and NASM.
A few things to note:
 GAS uses a new syntax for indexing memory using the base pointer register: x($ebp), where x is an integer number of bytes away from the pointer. NASM uses the same syntax as the previous chapter, with rbp used in pointer math in square brackets.</description>
    </item>
    
    <item>
      <title>Translating GAS to NASM, part 1</title>
      <link>https://brettapitz.github.io/posts/groundup1/</link>
      <pubDate>Mon, 15 Feb 2021 14:44:00 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/groundup1/</guid>
      <description>Programming from the Ground Up by Jonathan Bartlett is a fantastic introduction to coding in assembly, but the syntax it uses is a bit outdated. While searching for more modern standards, I had trouble finding much related to the GNU Assembler, but plenty for NASM, the Netwide Assembler, which seems to be a lot more common.
So, in the interest of keeping my studies relevant, I decided to translate the coding examples into modern 64-bit NASM.</description>
    </item>
    
  </channel>
</rss>
