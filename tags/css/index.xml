<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on Brett Apitz is Learning Stuff</title>
    <link>https://brettapitz.github.io/tags/css/</link>
    <description>Recent content in css on Brett Apitz is Learning Stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Oct 2021 09:36:21 -0500</lastBuildDate><atom:link href="https://brettapitz.github.io/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Alternating Blocks</title>
      <link>https://brettapitz.github.io/posts/alternatingblocks/</link>
      <pubDate>Sun, 24 Oct 2021 09:36:21 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/alternatingblocks/</guid>
      <description>This is a simple pair of blocks that transition between 0 and 1 opacity. I came up with two neat ways to calculate the opacity changes!
First, using absolute value like this will only ever produce 0 or 1: const toggle = () = { setLeftOpacity(Math.abs(leftOpacity - 1)) setRightOpacity(Math.abs(rightOpacity - 1)) }
And second, using a swap function: const toggle = () = { let temp = leftOpacity; setLeftOpacity(rightOpacity) setRightOpacity(temp) }</description>
    </item>
    
    <item>
      <title>Progress Bar</title>
      <link>https://brettapitz.github.io/posts/progressbar/</link>
      <pubDate>Sat, 23 Oct 2021 08:35:27 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/progressbar/</guid>
      <description>I tried making this in JavaScript, animating with setInterval, and it was complicated and janky and bad. I&amp;rsquo;m sure a library like Velocity could get it done, but I opted for nice, simple CSS transitions.
Pressing a key sets width to 100% and background-color to green, releasing a key sets width to 0 and background-color to blue, and CSS transitions handle the rest. A select element lets you see different easings - changing the option changes the progress bar&amp;rsquo;s class, with a different &amp;lsquo;transition-timimg-function&amp;rsquo; for each class.</description>
    </item>
    
    <item>
      <title>No-JS Collapsibles</title>
      <link>https://brettapitz.github.io/posts/dropdowns/</link>
      <pubDate>Thu, 14 Oct 2021 09:08:45 -0500</pubDate>
      
      <guid>https://brettapitz.github.io/posts/dropdowns/</guid>
      <description>Some time ago, I unsuccessfully searched for a way to make collapsibles without JavaScript. I figured it out after learning the parent:hover child CSS selector syntax. Check it out.
The CSS is a little messy, mostly because I&amp;rsquo;m making three separate dropdowns with different behaviors. It&amp;rsquo;d be cleaner in most practical applications. The only gotchas I encountered were needing to specify the background color for the menus, and using white-space: nowrap on the horizontally opening menu so that the height is constant while animating.</description>
    </item>
    
  </channel>
</rss>
